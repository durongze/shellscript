
;nasm 安装
nmake /f Mkfiles/msvc.mak

;启动vs64位命令行。之前编译过32位，需要nmake clean
;openssl-1.1.1编译。先安装perl和nasm工具
perl Configure  VC-WIN64A --prefix=E:\programs\openssl
nmake
nmake install

;zlib 安装
cmake .. -G "Visual Studio 14 2015 Win64"

;boost169  .prefix路径要存在
b2.exe install --toolset=msvc-14.0 --prefix="E:\programs\boost169"  threading=multi --build -type=complete  address-model=64

set path=%path%;e:\program\openssl\bin;e:\program\openssl\lib
set lib=%lib%;e:\program\openssl\bin;e:\program\openssl\lib
set include=%include%;e:\program\openssl\include

set boost_root=e:\program\boost
set include=%include%;e:\program\boost\include
set lib=%lib%;e:\program\boost\bin;e:\program\boost\lib

;websocketapp
cmake  .. -G "Visual Studio 14 2015 Win64"
msbuild websocketpp.sln

;cpprestsdk 
;set(Boost_USE_STATIC_LIBS ON CACHE BOOL "Link against boost statically.")
;    set(OPENSSL_LIBRARIES "E:/programs/OpenSSL/lib" CACHE INTERNAL "")
;    set(OPENSSL_INCLUDE_DIR "E:/programs/OpenSSL/include" CACHE INTERNAL "")  
;    set(Boost_LIBRARIES "E:/programs/boost169/lib" CACHE INTERNAL "")
;    set(Boost_INCLUDE_DIR "E:/programs/boost169/include" CACHE INTERNAL "")  
cmake  -G "Visual Studio 14 2015 Win64" ..
msbuild cpprestsdk-root.sln

; 编译libx264
./configure --enable-static --enable-shared   --extra-ldflags=-Wl,--output-def=libx264.def  --host=mingw64 --prefix=/e/program/libx264
; 编译ffmpeg
 ./configure --disable-static --enable-shared --enable-gpl --enable-version3  --enable-debug=3 --disable-optimizations --disable-mmx --disable-stripping  --prefix=/e/program/ffmpeg
; 编译obs
mkdir dyzbuild && cd dyzbuild && cmake ..

msys2 的主页地址：
http://sourceforge.net/projects/msys2/
packages：
https://github.com/Alexpux/MSYS2-packages

安装

msys2 安装目录只能是 ascii 字符并且不能有空格。比如：
C:/msys64
安装完后只有最基本的系统，没有gcc开发环境。打开bash shell：
msys2_shell.bat

pacman包管理

更新本地软件包

更新本地软件包数据库：
pacman -S --refresh
可以缩写为：pacman -Sy
然后升级软件包：
pacman -S --refresh --sysupgrade
可以缩写为：pacman -Syu

列出所有已安装软件

pacman -Q --explicit
缩写：
pacman -Q -e

安装新的软件包

pacman -S <package_names|package_groups>
比如要安装 gcc，执行：
pacman -S gcc

安装本地包:
pacman -U *.tar.xz

搜索软件包

pacman -Ss <name_pattern>

列出所有的软件组

pacman -Q --groups
