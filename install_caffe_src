#!/bin/bash
PROTOBUF=
tar xf $PROTOBUF

pushd $PROTOBUF
./configure --prefix=/opt/protobuf261 && make && make install
popd
#####################################################
LEVELDB=leveldb-master
unzip $LEVELDB

pushd $LEVELDB
make 
cp out-shared /opt/leveldb -a
cp include /opt/leveldb -a
popd

#####################################################
LIBLMDB=liblmdb
tar xf $LIBLMDB
pushd $LIBLMDB
make 
mkdir /opt/liblmdb/lib -p
mkdir /opt/liblmdb/include  -p  
cp *.a *.o /opt/liblmdb/lib -a
cp *.h /opt/liblmdb/include -a
popd
######################################################
OPENBLAS=OpenBLAS
zip OpenBLAS-develop.zip
pushd $OPENBLAS
make PREFIX=/opt/OpenBLAS
make PREFIX=/opt/OpenBLAS install
popd
######################################################
HDF5=hdf5
tar xf $HDF5
pushd $HDF5
./configure --prefix=/opt/hdf5180 && make && make install
popd
######################################################
GLOG=glog
unzip $GLOG
pushd $GLOG
./autogen.sh 
./configure --prefix=/opt/glog/  && make && make install
popd
#######################################################
GFLAGS=gflags-master
unzip $GFLAGS
pushd $GFLAGS
mkdir build
pushd build
export CXXFLAGS="-fPIC" && cmake .. && make VERBOSE=1 && make 
popd
mkdir /opt/gflags
cp lib include /opt/gflags/ -a
popd
########################################################
ZLIB=zlib
tar xf $ZLIB
pushd $ZLIB
./configure --prefix=/opt/zlib123 && make && make install
#加入-fPIC
popd
#########################################################
OPENCV330=
pushd $OPENCV330
mkdir build
pushd build
cmake -DCMAKE_INSTALL_PREFIX=/opt/opencv330  ..   && make && make install
popd
popd
########################################################
sudo yum install python-dev
########################################################
BOOST=
tar xf $BOOST
pushd $BOOST
bootstrap.sh
./b2
./b2 install --prefix=/opt/boost 
popd
########################################################
编译caffe

########################################################
rpm -ivh dkms-2.4.0-1.20170926git959bd74.el7.noarch.rpm 
yum install libXext-devel.x86_64
rpm -ivh libvdpau-0.9-1.el6.x86_64.rpm 
rpm -ivh cuda-repo-rhel7-8-0-local-ga2-8.0.61-1.x86_64.rpm
yum clean expire-cache
yum install cuda

nvidia-smi
export CUDA_HOME=/usr/local/cuda
export PATH=$CUDA_HOME/bin:$PATH
export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
##################################################################
sudo apt-get install samba-client
sudo apt-fast install smb4k
sudo apt-get install xorg-server-source-hwe-18.04
sudo apt-get install libxorg-gtest-dev
sudo apt-fast install xorg-dev
sudo nvidia-xconfig
sudo reboot
sudo apt-get install autoconf libtool
sudo apt-get install flex bison
sudo dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda-drivers
nvidia-smi
sudo apt remove nvidia-*
sudo dpkg -r nvidia
sudo init 5
sudo apt upgrade
sudo ./NVIDIA-Linux-x86_64-410.78.run --no-opengl-files
sudo reboot
sudo service gdm3 stop
sudo service gdm stop
sudo vi /etc/modprobe.d/blacklist.conf
sudo reboot
sudo apt-get install gnome-panel
sudo apt-get install cuda-gpu-library-advisor-10-0
sudo apt-get install xserver-xorg-video-nvidia-390
sudo apt-get install cuda-driver-390
find /usr/ -iname "cuda"
sudo apt-get install gnome
sudo apt-get install ubuntu-gnome-desktop
sudo reboot
sudo apt-get upgrade
nvidia-smi
sudo apt-get install caffe-cuda
sudo apt-get install caffe-tools-cuda
sudo apt-get install cuda-cublas-dev-10-0
find /usr/ -iname "cublas_v2.h"
sudo apt-fast install nvidia-cuda-toolkit
find /usr -iname "nvcc"
/usr/lib/nvidia-cuda-toolkit/bin/nvcc --version
sudo ln -sf  /usr/bin/nvcc /usr/local/cuda-10.0/bin/
